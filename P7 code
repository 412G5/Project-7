import requests
import hashlib

base_url = "our API url lol"

# a function to test the /md5/<string> endpoint
def test_md5_endpoint():
    test_string = "Hello World"
    expected_md5_hash = hashlib.md5(test_string.encode()).hexdigest()
    url = f"{base_url}/md5/{test_string}"
    response = requests.get(url)
    assert response.status_code == 200, "MD5 endpoint returned a non-200 status code"
    assert response.text.strip() == expected_md5_hash, "MD5 hash does not match"

# a function to test the /factorial/<int> endpoint
def test_factorial_endpoint():
    test_int = 5
    expected_factorial = 120
    url = f"{base_url}/factorial/{test_int}"
    response = requests.get(url)
    assert response.status_code == 200, "Factorial endpoint returned a non-200 status code"
    assert int(response.text) == expected_factorial, "Factorial calculation is incorrect"

# a function to test the /fibonacci/<int> endpoint
def test_fibonacci_endpoint():
    test_int = 8
    expected_fibonacci_sequence = [0, 1, 1, 2, 3, 5, 8]
    url = f"{base_url}/fibonacci/{test_int}"
    response = requests.get(url)
    assert response.status_code == 200, "Fibonacci endpoint returned a non-200 status code"
    assert list(map(int, response.json())) == expected_fibonacci_sequence, "Fibonacci sequence is incorrect"

#  a function to test the /is-prime/<int> endpoint
def test_is_prime_endpoint():
    test_prime = 17
    url = f"{base_url}/is-prime/{test_prime}"
    response = requests.get(url)
    assert response.status_code == 200, "Is-Prime endpoint returned a non-200 status code"
    assert response.text == "true", "Is-Prime check is incorrect"

#  a function to test the /slack-alert/<string> endpoint
def test_slack_alert_endpoint():
    test_message = "Test message"
    url = f"{base_url}/slack-alert/{test_message}"
    response = requests.get(url)
    assert response.status_code == 200, "Slack-Alert endpoint returned a non-200 status code"
    assert response.text == "true", "Slack alert failed to post"

# run all test functions
def run_tests():
    test_md5_endpoint()
    test_factorial_endpoint()
    test_fibonacci_endpoint()
    test_is_prime_endpoint()
    test_slack_alert_endpoint()
    print("All tests passed successfully.")

if __name__ == "__main__":
    run_tests()
